//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SWAT.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UWSocWorkMainEntities : DbContext
    {
        public UWSocWorkMainEntities()
            : base("name=UWSocWorkMainEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<oneRow> oneRows { get; set; }
        public virtual DbSet<orgChecked> orgCheckeds { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tbl_FORM_BSW_CheckStatus> tbl_FORM_BSW_CheckStatus { get; set; }
        public virtual DbSet<tbl_FORM_BSWApplication> tbl_FORM_BSWApplication { get; set; }
        public virtual DbSet<tbl_FORM_BSWApplication_Essay> tbl_FORM_BSWApplication_Essay { get; set; }
        public virtual DbSet<tbl_FORM_BSWApplication_Landing> tbl_FORM_BSWApplication_Landing { get; set; }
        public virtual DbSet<tbl_FORM_BSWApplication_Recommendation> tbl_FORM_BSWApplication_Recommendation { get; set; }
        public virtual DbSet<tbl_FORM_BSWApplication_Recommender> tbl_FORM_BSWApplication_Recommender { get; set; }
        public virtual DbSet<tbl_FORM_BSWApplication_Transcript> tbl_FORM_BSWApplication_Transcript { get; set; }
        public virtual DbSet<tbl_FORM_BSWReview> tbl_FORM_BSWReview { get; set; }
        public virtual DbSet<tblAdvisor_Note> tblAdvisor_Note { get; set; }
        public virtual DbSet<tblAffAgreement> tblAffAgreements { get; set; }
        public virtual DbSet<tblAffAgreement_Deleted> tblAffAgreement_Deleted { get; set; }
        public virtual DbSet<tblAllID> tblAllIDs { get; set; }
        public virtual DbSet<tblAsset> tblAssets { get; set; }
        public virtual DbSet<tblAssetLocation> tblAssetLocations { get; set; }
        public virtual DbSet<tblAssetPerson> tblAssetPersons { get; set; }
        public virtual DbSet<tblAssetType> tblAssetTypes { get; set; }
        public virtual DbSet<tblChangeLog> tblChangeLogs { get; set; }
        public virtual DbSet<tblConcentration> tblConcentrations { get; set; }
        public virtual DbSet<tblContact_Log> tblContact_Log { get; set; }
        public virtual DbSet<tblContact_Log_Queue> tblContact_Log_Queue { get; set; }
        public virtual DbSet<tblEmail> tblEmails { get; set; }
        public virtual DbSet<tblEntityform> tblEntityforms { get; set; }
        public virtual DbSet<tblEntityform_alldata> tblEntityform_alldata { get; set; }
        public virtual DbSet<tblEntityform_type> tblEntityform_type { get; set; }
        public virtual DbSet<tblExemptionGrid> tblExemptionGrids { get; set; }
        public virtual DbSet<tblFieldContact> tblFieldContacts { get; set; }
        public virtual DbSet<tblGrad_APPLICANTS> tblGrad_APPLICANTS { get; set; }
        public virtual DbSet<tblGrad_APPS> tblGrad_APPS { get; set; }
        public virtual DbSet<tblGrad_APPS_Cleaning> tblGrad_APPS_Cleaning { get; set; }
        public virtual DbSet<tblGrad_COMPLETION_DETAILS> tblGrad_COMPLETION_DETAILS { get; set; }
        public virtual DbSet<tblGrad_COMPLETION_SUMMARY> tblGrad_COMPLETION_SUMMARY { get; set; }
        public virtual DbSet<tblGrad_DECISIONS> tblGrad_DECISIONS { get; set; }
        public virtual DbSet<tblGRAD_RATINGS> tblGRAD_RATINGS { get; set; }
        public virtual DbSet<tblGRAD_SUPLAPP_RESPONSES> tblGRAD_SUPLAPP_RESPONSES { get; set; }
        public virtual DbSet<tblLookupAddress_Types> tblLookupAddress_Types { get; set; }
        public virtual DbSet<tblLookupConc_Type> tblLookupConc_Type { get; set; }
        public virtual DbSet<tblLookupContact_Method> tblLookupContact_Method { get; set; }
        public virtual DbSet<tblLookupContact_Type> tblLookupContact_Type { get; set; }
        public virtual DbSet<tblLookupCourse_Group> tblLookupCourse_Group { get; set; }
        public virtual DbSet<tblLookupCourse_ORDER> tblLookupCourse_ORDER { get; set; }
        public virtual DbSet<tblLookupDiversity> tblLookupDiversities { get; set; }
        public virtual DbSet<tblLookupEthnic> tblLookupEthnics { get; set; }
        public virtual DbSet<tblLookupExemption_Type> tblLookupExemption_Type { get; set; }
        public virtual DbSet<tblLookupFlag> tblLookupFlags { get; set; }
        public virtual DbSet<tblLookupFocusArea> tblLookupFocusAreas { get; set; }
        public virtual DbSet<tblLookupGroup> tblLookupGroups { get; set; }
        public virtual DbSet<tblLookupOrgStatu> tblLookupOrgStatus { get; set; }
        public virtual DbSet<tblLookupPhone_Types> tblLookupPhone_Types { get; set; }
        public virtual DbSet<tblLookupPlacement_Status> tblLookupPlacement_Status { get; set; }
        public virtual DbSet<tblLookupProgram> tblLookupPrograms { get; set; }
        public virtual DbSet<tblLookupSupervisorType> tblLookupSupervisorTypes { get; set; }
        public virtual DbSet<tblLookupTerm> tblLookupTerms { get; set; }
        public virtual DbSet<tblLookupVetran_Status> tblLookupVetran_Status { get; set; }
        public virtual DbSet<tblLookupYear> tblLookupYears { get; set; }
        public virtual DbSet<tblLoookup_579_Topics> tblLoookup_579_Topics { get; set; }
        public virtual DbSet<tblMSW_RecievedTranscripts> tblMSW_RecievedTranscripts { get; set; }
        public virtual DbSet<tblNotification> tblNotifications { get; set; }
        public virtual DbSet<tblOrg> tblOrgs { get; set; }
        public virtual DbSet<tblOrg_Deleted> tblOrg_Deleted { get; set; }
        public virtual DbSet<tblOrg_Old> tblOrg_Old { get; set; }
        public virtual DbSet<tblPlacement> tblPlacements { get; set; }
        public virtual DbSet<tblReview> tblReviews { get; set; }
        public virtual DbSet<tblReview_Email> tblReview_Email { get; set; }
        public virtual DbSet<tblReview_Score_Override> tblReview_Score_Override { get; set; }
        public virtual DbSet<tblReviewer> tblReviewers { get; set; }
        public virtual DbSet<tblReviewers_TERM> tblReviewers_TERM { get; set; }
        public virtual DbSet<tblReviewTeam> tblReviewTeams { get; set; }
        public virtual DbSet<tblSTDNT> tblSTDNTs { get; set; }
        public virtual DbSet<tblSTDNT_Address> tblSTDNT_Address { get; set; }
        public virtual DbSet<tblSTDNT_COURSES> tblSTDNT_COURSES { get; set; }
        public virtual DbSet<tblSTDNT_COURSES_EXEMPTIONS> tblSTDNT_COURSES_EXEMPTIONS { get; set; }
        public virtual DbSet<tblSTDNT_COURSES_GroupOveride> tblSTDNT_COURSES_GroupOveride { get; set; }
        public virtual DbSet<tblSTDNT_COURSES_NOTE> tblSTDNT_COURSES_NOTE { get; set; }
        public virtual DbSet<tblSTDNT_DIRECTORY> tblSTDNT_DIRECTORY { get; set; }
        public virtual DbSet<tblSTDNT_FLAG> tblSTDNT_FLAG { get; set; }
        public virtual DbSet<tblSTDNT_LOCAL> tblSTDNT_LOCAL { get; set; }
        public virtual DbSet<tblSTDNT_PHD> tblSTDNT_PHD { get; set; }
        public virtual DbSet<tblSTDNT_PLAN> tblSTDNT_PLAN { get; set; }
        public virtual DbSet<tblSTDNT_TIMETABLE> tblSTDNT_TIMETABLE { get; set; }
        public virtual DbSet<tblSupervisor> tblSupervisors { get; set; }
        public virtual DbSet<tblUGRD_APPS> tblUGRD_APPS { get; set; }
        public virtual DbSet<tblUGRD_Decisions> tblUGRD_Decisions { get; set; }
        public virtual DbSet<tblUser> tblUsers { get; set; }
        public virtual DbSet<tblWorkLocation> tblWorkLocations { get; set; }
        public virtual DbSet<russData> russDatas { get; set; }
        public virtual DbSet<tblEmail_Single> tblEmail_Single { get; set; }
        public virtual DbSet<tblEmail_WISC> tblEmail_WISC { get; set; }
        public virtual DbSet<tblEntityForm_Data_PIVOT> tblEntityForm_Data_PIVOT { get; set; }
        public virtual DbSet<tblGrad_DECISION_SINGLE_FINAL> tblGrad_DECISION_SINGLE_FINAL { get; set; }
        public virtual DbSet<tblGrad_DECISION_SINGLE_VIEW> tblGrad_DECISION_SINGLE_VIEW { get; set; }
        public virtual DbSet<tblReview_Count_Complete> tblReview_Count_Complete { get; set; }
        public virtual DbSet<tblReview_COUNT_VIEW> tblReview_COUNT_VIEW { get; set; }
        public virtual DbSet<tblSeminar> tblSeminars { get; set; }
        public virtual DbSet<view_Grad_Apps_New_Students> view_Grad_Apps_New_Students { get; set; }
        public virtual DbSet<view_Placement_Single_View> view_Placement_Single_View { get; set; }
        public virtual DbSet<view_Program_Courses> view_Program_Courses { get; set; }
        public virtual DbSet<view_Program_Courses_InProgram> view_Program_Courses_InProgram { get; set; }
        public virtual DbSet<view_Program_Courses_OutProgram> view_Program_Courses_OutProgram { get; set; }
        public virtual DbSet<view_Seminar_Students> view_Seminar_Students { get; set; }
        public virtual DbSet<viewCompletedForm> viewCompletedForms { get; set; }
        public virtual DbSet<viewPTPAdmissionData> viewPTPAdmissionDatas { get; set; }
    
        public virtual int createProspectiveStudent(string firstName, string lastName, Nullable<int> prog)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var progParameter = prog.HasValue ?
                new ObjectParameter("Prog", prog) :
                new ObjectParameter("Prog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createProspectiveStudent", firstNameParameter, lastNameParameter, progParameter);
        }
    
        public virtual int maketblEntityForm_Data_PIVOT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("maketblEntityForm_Data_PIVOT");
        }
    
        public virtual int maketblEntityForm_PIVOT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("maketblEntityForm_PIVOT");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
